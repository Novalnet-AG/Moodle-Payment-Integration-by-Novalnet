define("paygw_novalnet/startpayment",["exports","paygw_novalnet/repository","core/notification","core/str"],(function(_exports,Repository,Notification,str){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}
/**
   *  Novalnet payment plugin
   *
   * Payment integration for the Novalnet system
   *
   * @author       Novalnet
   * @module     paygw_novalnet/startpayment
   * @copyright(C) Novalnet. All rights reserved. <https://www.novalnet.de/>
   * @license https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.startPayment=void 0,Repository=_interopRequireWildcard(Repository),Notification=_interopRequireWildcard(Notification),str=_interopRequireWildcard(str);_exports.startPayment=selector=>{document.querySelectorAll("button"+selector).forEach((function(button){button.addEventListener("click",(e=>{e.preventDefault();const dataset=e.currentTarget.dataset;var PaymentMethod=function(){let el=document.querySelector('input[name="method"][type="radio"]:checked');return null!=el?el.value:null}();null!==PaymentMethod?Repository.createPayment(dataset.component,dataset.paymentarea,dataset.itemid,dataset.description,PaymentMethod).then((result=>(result.success?window.location.href=result.redirecturl:str.get_strings([{key:"startpayment:failed:title",component:"paygw_novalnet"},{key:"startpayment:failed:btncancel",component:"paygw_novalnet"}]).then((strings=>{Notification.alert(strings[0],result.message,strings[1])})),Promise.resolve()))).catch(Notification.exception):Notification.alert("",str.get_string("startpayment:failed:nopayment","paygw_novalnet"))}))}))}}));

//# sourceMappingURL=startpayment.min.js.map